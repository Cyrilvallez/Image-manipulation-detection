---
name : Benchmark_general_BSDS500
date generated: Wednesday 06/04/2022
GPU(s): 1 rtx 3080
CPUs: 8
dataset used: BSDS500, with attacks on disk
thresholds: thresholds = [
    np.linspace(0, 0.4, 20),
    np.linspace(0.1, 0.4, 20),
    np.linspace(0.05, 0.4, 20),
    np.linspace(0, 0.4, 20),
    np.linspace(0, 0.4, 20),
    np.linspace(0, 300, 20),
    np.linspace(0, 0.3, 20),
    np.linspace(0, 0.4, 20),
    np.linspace(0.1, 0.4, 20),
    np.linspace(0.15, 0.65, 20),
    np.linspace(0.3, 0.9, 20),
    np.linspace(0.2, 0.6, 20),
    np.linspace(0.2, 0.6, 20),
    np.linspace(0.3, 0.8, 20),
    np.linspace(0.3, 0.9, 20),
    np.linspace(0.4, 0.9, 20),
    ]
algorithms:  [
    hashing.ClassicalAlgorithm('Ahash', hash_size=8, batch_size=16),
    hashing.ClassicalAlgorithm('Phash', hash_size=8, batch_size=16),
    hashing.ClassicalAlgorithm('Dhash', hash_size=8, batch_size=16),
    hashing.ClassicalAlgorithm('Whash', hash_size=8, batch_size=16),
    hashing.ClassicalAlgorithm('Crop resistant hash', hash_size=8, batch_size=16, cutoff=1),
    hashing.FeatureAlgorithm('SIFT', batch_size=16, n_features=30, cutoff=1),
    hashing.FeatureAlgorithm('ORB', batch_size=16, n_features=30, cutoff=1),
    hashing.FeatureAlgorithm('FAST + DAISY', batch_size=16, n_features=30, cutoff=1),
    hashing.FeatureAlgorithm('FAST + LATCH', batch_size=16, n_features=30, cutoff=1),
    hashing.NeuralAlgorithm('Inception v3', raw_features=True, batch_size=16,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('EfficientNet B7', raw_features=True, batch_size=16,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('ResNet50 2x', raw_features=True, batch_size=16,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('ResNet101 2x', raw_features=True, batch_size=16,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v1 ResNet50 2x', raw_features=True, batch_size=16,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet50 2x', raw_features=True, batch_size=16,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet101 2x', raw_features=True, batch_size=16,
                            device='cuda', distance='Jensen-Shannon'),
    ]
general batch size: 16

---
purpose: |
Perform the most critical experiments with the new attacks and benchmark everything for paper.