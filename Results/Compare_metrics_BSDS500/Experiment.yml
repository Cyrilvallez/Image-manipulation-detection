---
name : Compare_metrics_BSDS500
date generated: Monday 11/04/2022
GPU(s): 1 rtx 3080
CPUs: 8
dataset used: BSDS500, with attacks on disk
thresholds: thresholds = [
    np.linspace(0, 0.4, 20),
    np.linspace(4, 30, 20),
    np.linspace(180, 820, 20),
    np.linspace(0.15, 0.65, 20),
    np.linspace(0, 0.5, 20),
    np.linspace(0, 15, 20),
    np.linspace(0, 500, 20),
    np.linspace(0.3, 0.9, 20),
    np.linspace(0, 0.4, 20),
    np.linspace(6, 30, 20),
    np.linspace(200, 800, 20),
    np.linspace(0.2, 0.6, 20),
    np.linspace(0.05, 0.45, 20),
    np.linspace(3, 20, 20),
    np.linspace(100, 350, 20),
    np.linspace(0.4, 0.85, 20),
    np.linspace(0, 0.4, 20),
    np.linspace(3, 12, 20),
    np.linspace(80, 250, 20),
    np.linspace(0.3, 0.9, 20),
    ]
algorithms:  [
    hashing.NeuralAlgorithm('Inception v3', raw_features=True, batch_size=32,
                            device='cuda', distance='cosine'),
    hashing.NeuralAlgorithm('Inception v3', raw_features=True, batch_size=32,
                            device='cuda', distance='L2'),
    hashing.NeuralAlgorithm('Inception v3', raw_features=True, batch_size=32,
                            device='cuda', distance='L1'),
    hashing.NeuralAlgorithm('Inception v3', raw_features=True, batch_size=32,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('EfficientNet B7', raw_features=True, batch_size=32,
                            device='cuda', distance='cosine'),
    hashing.NeuralAlgorithm('EfficientNet B7', raw_features=True, batch_size=32,
                            device='cuda', distance='L2'),
    hashing.NeuralAlgorithm('EfficientNet B7', raw_features=True, batch_size=32,
                            device='cuda', distance='L1'),
    hashing.NeuralAlgorithm('EfficientNet B7', raw_features=True, batch_size=32,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='cosine'),
    hashing.NeuralAlgorithm('ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='L2'),
    hashing.NeuralAlgorithm('ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='L1'),
    hashing.NeuralAlgorithm('ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v1 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='cosine'),
    hashing.NeuralAlgorithm('SimCLR v1 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='L2'),
    hashing.NeuralAlgorithm('SimCLR v1 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='L1'),                        
    hashing.NeuralAlgorithm('SimCLR v1 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='cosine'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='L2'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='L1'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet50 2x', raw_features=True, batch_size=32,
                            device='cuda', distance='Jensen-Shannon')
    ]
general batch size: 32

---
purpose: |
Compare the different metrics for neural algorithms.