---
name : Database_250_ImageNet
date generated: Thursday 14/04/2022
GPU(s): 1 a100
CPUs: 16
dataset used: ImageNet with database of size 250 (100 images on which we perform the attacks)
thresholds: thresholds = [
    np.linspace(0, 0.4, 20),
    np.linspace(0.1, 0.4, 20),
    np.linspace(0.05, 0.4, 20),
    np.linspace(0, 0.4, 20),
    np.linspace(0, 300, 20),
    np.linspace(0, 0.3, 20),
    np.linspace(0, 0.4, 20),
    np.linspace(0.1, 0.4, 20),
    np.linspace(0.15, 0.65, 20),
    np.linspace(0.2, 0.9, 20),
    np.linspace(0.2, 0.6, 20),
    np.linspace(0.2, 0.6, 20),
    np.linspace(0.3, 0.8, 20),
    np.linspace(0.3, 0.9, 20),
    np.linspace(0.4, 0.9, 20),
    ]
algorithms:  [
    hashing.ClassicalAlgorithm('Ahash', hash_size=8, batch_size=2000),
    hashing.ClassicalAlgorithm('Phash', hash_size=8, batch_size=2000),
    hashing.ClassicalAlgorithm('Dhash', hash_size=8, batch_size=2000),
    hashing.ClassicalAlgorithm('Whash', hash_size=8, batch_size=2000),
    hashing.FeatureAlgorithm('SIFT', batch_size=1000, n_features=30, cutoff=1),
    hashing.FeatureAlgorithm('ORB', batch_size=1000, n_features=30, cutoff=1),
    hashing.FeatureAlgorithm('FAST + DAISY', batch_size=1000, n_features=30, cutoff=1),
    hashing.FeatureAlgorithm('FAST + LATCH', batch_size=1000, n_features=30, cutoff=1),
    hashing.NeuralAlgorithm('Inception v3', raw_features=True, batch_size=64,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('EfficientNet B7', raw_features=True, batch_size=64,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('ResNet50 2x', raw_features=True, batch_size=512,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('ResNet101 2x', raw_features=True, batch_size=512,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v1 ResNet50 2x', raw_features=True, batch_size=512,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet50 2x', raw_features=True, batch_size=512,
                            device='cuda', distance='Jensen-Shannon'),
    hashing.NeuralAlgorithm('SimCLR v2 ResNet101 2x', raw_features=True, batch_size=512,
                            device='cuda', distance='Jensen-Shannon'),
    ]
general batch size: 64

---
purpose: |
Perform experiments with database size on ImageNet and benchmark it for paper. We always keep the same attacked images
in this serie of experiments.